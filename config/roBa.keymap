#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 5 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        normal {
            bindings = <
&kp W        &kp E         &kp R          &kp T        &kp Y                                          &kp U      &kp I      &kp O      &kp P           &kp BACKSPACE
&kp A        &kp S         &kp D          &kp F        &kp G      &kp KP_NUMLOCK        &kp H         &kp J      &kp K      &kp L      &msc SCRL_UP    &kp ENTER
&kp Z        &kp C         &kp V          &kp B        &kp COMMA  &kp PERIOD            &kp N         &kp M      &mkp RCLK  &mkp LCLK  &msc SCRL_DOWN  &kp LEFT_SHIFT
&lt 2 SPACE  &kp LEFT_WIN  &kp RIGHT_ALT  &lt 1 SPACE  &trans     &kp LEFT_CONTROL      &kp CAPSLOCK  &kp SPACE                                        &lt 2 SPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        number1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                            &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans  &trans        &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                &trans
            >;
        };

        SHIFT2 {
            bindings = <
&kp Q   &trans  &trans  &trans  &trans                                                            &trans       &trans  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp RIGHT_ARROW
&trans  &trans  &trans  &trans  &trans                &trans                     &kp EXCLAMATION  &kp AT_SIGN  &trans  &trans        &kp UP_ARROW     &kp LEFT
&trans  &kp X   &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp QUESTION     &kp SLASH    &trans  &trans        &kp DOWN_ARROW   &kp MINUS
&trans  &trans  &trans  &trans  &trans                &trans                     &trans           &trans                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        other3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
